<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Enables JSR-330 validation -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

	<!-- Defines basic MVC defaults (handler adapter, mapping, date formatting, etc) -->
	<mvc:annotation-driven validator="validator"/>

	
	<!-- 
	  Configures a handler for serving static resources by forwarding to the 
	  Servlet container's default Servlet. 
	-->
	<mvc:default-servlet-handler />

	<!-- Interceptor to set caching response headers. Applied to all handler mappings. -->
	<mvc:interceptors>
		<bean class="rewardsonline.FragmentRequestHandlingInterceptor"/>
		<bean class="org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor">
		    <property name="sessionFactory" ref="sessionFactory"/>
		</bean>
	</mvc:interceptors>

	<!-- Define controllers which only render pages (i.e. nothing added to the model) -->
	<mvc:view-controller path="/" view-name="welcome"/>
	<mvc:view-controller path="/home" view-name="welcome"/>

	<!-- Resolves view names to Tiles 2 definitions -->
	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</bean>

	<bean id="jsonViewResolver" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json"/>
			</map>
		</property>
		<property name="defaultViews" ref="jsonViewResolver" />
	</bean>

	<!-- Configures Tiles2 -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
				<value>/WEB-INF/accounts/tiles.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- Resolves messages to support internationalization -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>/WEB-INF/messages/global</value>
			</list>
		 </property>
	</bean>
	
</beans>