<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Enables JSR-330 validation -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

	<!-- Defines basic MVC defaults (handler adapter, mapping, date formatting, etc) -->
	<mvc:annotation-driven conversion-service="typeConversionService" validator="validator"/>

	<!-- Define a custom ConversionService -->
	<bean id="typeConversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
    	<property name="formatters">
        	<list>
            	<bean class="common.money.MonetaryAmountFormatter"/>
            	<bean class="common.datetime.SimpleDateFormatter"/>
        	</list>
    	</property>
	</bean>
	
	<!-- 
	  Configures a handler for serving static resources by forwarding to the 
	  Servlet container's default Servlet. 
	-->
	<mvc:default-servlet-handler />

	<!-- Serves up cached and compressed static content at /resources/* from the webapp root and classpath  -->
	<mvc:resources mapping="/resources/**" location="/,classpath:/META-INF/" />
	
	<!-- 
		Interceptors for locale/theme changing and the setting of caching response headers. 
	 	Applied automatically against all handler mappings. 
	 -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
   		<bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor" />
   		<bean class="org.springframework.web.servlet.mvc.WebContentInterceptor">
   			<property name="cacheSeconds" value="0"/>
   			<property name="supportedMethods"><null/></property>
   		</bean>
	</mvc:interceptors>

	<!-- Define controllers which only render pages (i.e. nothing added to the model) -->
	<mvc:view-controller path="/" view-name="welcome"/>
	<mvc:view-controller path="/login" view-name="login"/>
	<mvc:view-controller path="/home" view-name="welcome"/>
	
	<!-- 
	  Maps requests to flows in the flowRegistry; 
	  e.g. a path of /rewards/newReward looks for a flow with id "rewards/newReward". 
	  Note the order=0 property: since <mvc:annotation-driven> creates a handler mapping with order 0.  
	  For this to be used first it needs to have a lower order number 
	  -->
	<bean id="flowMappings" class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping">
		<property name="order" value="-1" />
		<property name="flowRegistry" ref="flowRegistry" />
	</bean>
	
	<!-- Note: No need to explicitly list the AnnotationMethodHandlerAdapter, since we're using mvc:annotation-driven -->

	<!-- Dispatches requests mapped to flows to FlowHandler implementations -->
	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter">
		<property name="flowExecutor" ref="flowExecutor"/>
	</bean>	
	
	<!-- Resolves view names to Tiles 2 definitions -->
	<bean id="tilesViewResolver" class="org.springframework.js.ajax.AjaxUrlBasedViewResolver">
		<property name="requestContextAttribute" value="requestContext"/>	
		<property name="viewClass" value="org.springframework.webflow.mvc.view.FlowAjaxTilesView"/>
	</bean>

	<!-- Configures Tiles 2 -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
				<value>/WEB-INF/accounts/tiles.xml</value>
				<value>/WEB-INF/rewards/tiles.xml</value>
				<value>/WEB-INF/rewards/newReward/tiles.xml</value>				
			</list>
		</property>
	</bean>
	
	<!-- Resolves messages to support internationalization -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>/WEB-INF/messages/global</value>
			</list>
		 </property>
	</bean>
	
	<!-- Enables locale resolution with the help of a browser cookie -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="en" />
		<property name="cookieMaxAge" value="3600"/>
	</bean>

	<!-- Enables theme resolution with the help of a browser cookie -->
	<bean id="themeResolver" class="org.springframework.web.servlet.theme.CookieThemeResolver">
		<property name="defaultThemeName" value="green" />
		<property name="cookieMaxAge" value="3600"/>
	</bean>

	<!-- Maps exceptions to view names. -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="error" />
		<property name="defaultStatusCode" value="500" />
		<property name="warnLogCategory" value="debug" />
	</bean>
		
</beans>