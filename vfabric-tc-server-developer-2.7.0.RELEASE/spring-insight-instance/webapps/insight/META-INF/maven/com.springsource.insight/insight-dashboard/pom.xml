<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.springsource.insight</groupId>
	<artifactId>insight-dashboard</artifactId>
	<version>1.8.3.RELEASE</version>
	<name>com.springsource.insight:dashboard</name>
	<packaging>war</packaging>
	
	<parent>
		<groupId>com.springsource.insight</groupId>
		<artifactId>parent</artifactId>
		<version>1.8.3.RELEASE</version>
		<relativePath>../../parent</relativePath>
	</parent>
	
	<properties>
		<dojo.minify.prep.dir>${project.build.directory}/dojo-minify-prep</dojo.minify.prep.dir>
		<dojo.minify.out.dir>${project.build.directory}/dojo-minify-out</dojo.minify.out.dir>
		<dojo.source.dir>${basedir}/src/main/webapp/dojo</dojo.source.dir>
		<dojo.minify.dir>${basedir}/dojo-minify</dojo.minify.dir>
	</properties>
	
	<dependencies>
		<!-- Compile dependencies -->
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.8.0</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-util</artifactId>
			<version>6.1.25</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>1.7.0</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<!-- Composite-view & layout framework -->
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-core</artifactId>
			<version>2.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-jsp</artifactId>
			<version>2.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>${freemarker.version}</version>
		</dependency>
		<dependency>
			<groupId>jfree</groupId>
			<artifactId>jfreechart</artifactId>
			<version>1.0.13</version>
		</dependency>
		<dependency>
			<groupId>jfree</groupId>
			<artifactId>jcommon</artifactId>
			<version>1.0.15</version>
		</dependency>
		<!-- Spring Framework Project libraries -->
        <dependency>
                <!-- Due to Maven transitive dependencies issues, we must explicitly call out our
                     spring-tx here to avoid bundling a spring-tx that comes with spring-security
                     (which may not be the same version of the spring-framework) -->
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.framework.version}</version>
        </dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.webflow</groupId>
			<artifactId>spring-js</artifactId>
			<version>2.1.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<!-- Repo is embedded in the dashboard war -->
		<dependency>
			<groupId>com.springsource.insight</groupId>
			<artifactId>insight-repo</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.springsource.insight</groupId>
			<artifactId>insight-idk</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.springsource.insight</groupId>
					<artifactId>insight-annotation</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.springsource.insight</groupId>
					<artifactId>insight-collection</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Container-provided dependencies-->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<!--  This is provided by tcServer (by deploying the related jars in the shared lib -->
		<dependency>
			<groupId>com.springsource.insight</groupId>
			<artifactId>insight-util</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.springsource.insight</groupId>
			<artifactId>insight-intercept</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.framework.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<profiles>
		<profile>
			<id>minifyDojo</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>minify-dojo</id>
								<phase>compile</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<delete dir="${dojo.minify.prep.dir}" />
										<mkdir dir="${dojo.minify.prep.dir}" />
										<copy todir="${dojo.minify.prep.dir}">
											<fileset dir="${dojo.source.dir}" />
										</copy>
										<copy todir="${dojo.minify.prep.dir}/dojo-minify">
											<fileset dir="${dojo.minify.dir}" />
										</copy>
										<mkdir dir="${dojo.minify.out.dir}" />
										<exec dir="${dojo.minify.prep.dir}/dojo-minify/buildscripts" executable="${java.home}/bin/java">
											<arg line="-classpath" />
											<arg line="../shrinksafe/js.jar:../shrinksafe/shrinksafe.jar" />
											<arg line="org.mozilla.javascript.tools.shell.Main" />
											<arg line="build.js" />
											<arg line="profileFile=${basedir}/dojo-minify/insight.profile.js" />
											<arg line="action=release" />
											<arg line="releaseName=" />
											<arg line="releaseDir=${dojo.minify.out.dir}" />
											<arg line="optimize=shrinksafe.keepLines" />
											<arg line="layerOptimize=shrinksafe.keepLines" />
											<arg line="internStrings=true" />
											<arg line="cssOptimize=comments" />
										</exec>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<manifestFile>src/main/webapp/META-INF/MANIFEST.MF</manifestFile>
							<warSourceExcludes>dojo/**</warSourceExcludes>
							<webResources>
								<resource>
									<directory>${dojo.minify.out.dir}</directory>
									<targetPath>dojo</targetPath>
								</resource>
							</webResources>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<manifestFile>src/main/webapp/META-INF/MANIFEST.MF</manifestFile>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>com.atlassian.maven.plugins</groupId>
				<artifactId>maven-clover2-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.groovy.maven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<executions>
					<execution>
                        <id>process-groovy-sources</id>
						<goals>
							<goal>generateStubs</goal>
							<goal>compile</goal>
							<goal>generateTestStubs</goal>
							<goal>testCompile</goal>
						</goals>
						<configuration>
							<sources>
								<fileset>
									<directory>${pom.basedir}/src/main/groovy</directory>
									<includes>
										<include>**/*.groovy</include>
									</includes>
								</fileset>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.mycila.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<configuration>
					<header>../../etc/commercialHeader.txt</header>
					<excludes>
						<exclude>**/dojo-minify/**/*</exclude>
						<exclude>**/src/main/webapp/dojo/dojox/**/*</exclude>
					</excludes>
				</configuration>
			</plugin>
            <plugin>
                <groupId>org.jboss.maven.plugins</groupId>
                <artifactId>maven-injection-plugin</artifactId>
                <executions>
                    <execution>
                        <id>inject-build-version</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>bytecode</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <bytecodeInjections>
                        <bytecodeInjection>
                            <expression>${project.version}</expression>
                            <targetMembers>
                                <methodBodyReturn>
                                    <className>com.springsource.insight.dashboard.config.maven.MavenInjectedDashboardInsightVersion</className>
                                    <methodName>getVersionString</methodName>
                                </methodBodyReturn>
                            </targetMembers>
                        </bytecodeInjection>
                        <bytecodeInjection>
                            <expression>${build.timestamp}</expression>
                            <targetMembers>
                                <methodBodyReturn>
                                    <className>com.springsource.insight.dashboard.config.maven.MavenInjectedDashboardInsightVersion</className>
                                    <methodName>getBuildTimestampString</methodName>
                                </methodBodyReturn>
                            </targetMembers>
                        </bytecodeInjection>
                    </bytecodeInjections>
                </configuration>
            </plugin>

		</plugins>
	</build>
	
</project>
